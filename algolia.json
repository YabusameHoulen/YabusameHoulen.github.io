
[
  
  
  {
    "objectID": "1743530400",
    "permalink": "/post/hello/",
    "title": "Hello World",
    
    "content": "💘 博麗 霊夢 💘\nMarkdown Basic Functionality\r标题\rH1\rH2\rH3\rH4\rH5\rH6\r强调\rEmphasis, aka italics, with asterisks or underscores.\nStrong emphasis, aka bold, with asterisks or underscores.\nCombined emphasis with asterisks and underscores.\nStrikethrough uses two tildes. Scratch this.\n列表\rDefinition List (dl)\rOrdered List (ol)\rList Item 1 List Item 2 List Item 3 Unordered List (ul)\rList Item 1 List Item 2 List Item 3 段落\rLorem ipsum dolor sit amet, test link consectetur adipiscing elit. Strong text pellentesque ligula commodo viverra vehicula. Italic text at ullamcorper enim. Morbi a euismod nibh. Underline text non elit nisl. Deleted text tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\nInterdum et malesuada fames ac ante ipsum primis in faucibus. Sed erat diam, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\nThis is a very long line that will still be quoted properly when it wraps. Oh boy let\u0026rsquo;s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n表格\rTable Header 1 Table Header 2 Table Header 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Division 1 Division 2 Division 3 Markdown Less Pretty Still renders nicely 1 2 3 其他元素 - abbr, acronym, sub, sup, kbd, etc.\rLorem superscript dolor subscript amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. cite. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. NBA Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus. AVE. Use Crtl + C to stop.\n图片\r分隔线\r代码块\rLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\u0026#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. function hello_world() println(\u0026#34;this is a hello world\u0026#34;) end 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 #[derive(Debug)] pub enum State { Start, Transient, Closed, } impl From\u0026lt;\u0026amp;\u0026#39;a str\u0026gt; for State { fn from(s: \u0026amp;\u0026#39;a str) -\u0026gt; Self { match s { \u0026#34;start\u0026#34; =\u0026gt; State::Start, \u0026#34;closed\u0026#34; =\u0026gt; State::Closed, _ =\u0026gt; unreachable!(), } } } #[derive(Debug)] pub enum State { Start, Transient, Closed, } impl From\u0026lt;\u0026amp;\u0026#39;a str\u0026gt; for State { fn from(s: \u0026amp;\u0026#39;a str) -\u0026gt; Self { match s { \u0026#34;start\u0026#34; =\u0026gt; State::Start, \u0026#34;closed\u0026#34; =\u0026gt; State::Closed, _ =\u0026gt; unreachable!(), } } } @requires_authorization def somefunc(param1=\u0026#39;\u0026#39;, param2=0): r\u0026#39;\u0026#39;\u0026#39;A docstring\u0026#39;\u0026#39;\u0026#39; if param1 \u0026gt; param2: # interesting print \u0026#39;Gre\\\u0026#39;ater\u0026#39; return (param2 - param1 + 1 + 0b10l) or None class SomeClass: pass \u0026gt;\u0026gt;\u0026gt; message = \u0026#39;\u0026#39;\u0026#39;interpreter ... prompt\u0026#39;\u0026#39;\u0026#39; \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;title\u0026gt;Title\u0026lt;/title\u0026gt; \u0026lt;style\u0026gt; body { width: 500px; } \u0026lt;/style\u0026gt; \u0026lt;script type=\u0026#34;application/javascript\u0026#34;\u0026gt; function $init() { return true; } \u0026lt;/script\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p checked class=\u0026#34;title\u0026#34; id=\u0026#34;title\u0026#34;\u0026gt;Title\u0026lt;/p\u0026gt; \u0026lt;!-- here goes the rest of the page --\u0026gt; \u0026lt;/body\u0026gt; function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=\u0026#34;${cls}\u0026#34;`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i \u0026lt; classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log(\u0026#39;undefined\u0026#39;); } return ( \u0026lt;div\u0026gt; \u0026lt;web-component\u0026gt;{block}\u0026lt;/web-component\u0026gt; \u0026lt;/div\u0026gt; ) } export $initHighlight; #include \u0026lt;iostream\u0026gt; int main(int argc, char *argv[]) { /* An annoying \u0026#34;Hello World\u0026#34; example */ for (auto i = 0; i \u0026lt; 0xFFFF; i++) cout \u0026lt;\u0026lt; \u0026#34;Hello, World!\u0026#34; \u0026lt;\u0026lt; endl; char c = \u0026#39;\\n\u0026#39;; unordered_map \u0026lt;string, vector\u0026lt;string\u0026gt; \u0026gt; m; m[\u0026#34;key\u0026#34;] = \u0026#34;\\\\\\\\\u0026#34;; // this is an error return -2e3 + 12l; } # Makefile BUILDDIR = _build EXTRAS ?= $(BUILDDIR)/extras .PHONY: main clean main: @echo \u0026#34;Building main facility...\u0026#34; build_main $(BUILDDIR) clean: rm -rf $(BUILDDIR)/* package main import \u0026#34;fmt\u0026#34; func main() { ch := make(chan float64) ch \u0026lt;- 1.0e10 // magic number x, ok := \u0026lt;- ch defer fmt.Println(`exitting now\\`) go println(len(\u0026#34;hello world!\u0026#34;)) return } #!/bin/bash ###### CONFIG ACCEPTED_HOSTS=\u0026#34;/root/.hag_accepted.conf\u0026#34; BE_VERBOSE=false if [ \u0026#34;$UID\u0026#34; -ne 0 ] then echo \u0026#34;Superuser rights required\u0026#34; exit 2 fi genApacheConf(){ echo -e \u0026#34;# Host ${HOME_DIR}$1/$2 :\u0026#34; } 数学公式\r$$\rT = \\begin{pmatrix}\r1 \u0026 0 \u0026 0 \\\\\r0 \u0026 2 \u0026 0 \\\\\r0 \u0026 0 \u0026 3\r\\end{pmatrix},\r$$ 求 $V$ 的一组标准正交基（用 $\\alpha_1, \\alpha_2, \\alpha_3$ 的线性组合）。\n解: 对 $(T, I)$ 作合同变换，将 $T$ 化为单位矩阵 $I$:\n$$\r\\begin{bmatrix}\r1 \u0026 0 \u0026 0 \\\\\r0 \u0026 2 \u0026 0 \\\\\r0 \u0026 0 \u0026 3\r\\end{bmatrix} \\rightarrow \\cdots \\rightarrow \\begin{bmatrix}\r1 \u0026 0 \u0026 0 \\\\\r0 \u0026 1 \u0026 0 \\\\\r0 \u0026 0 \u0026 1\r\\end{bmatrix}\r$$ 流程图\rsequenceDiagram\rparticipant 客户端\rparticipant 代理对象\rparticipant 代理处理器\rparticipant 目标对象\r客户端-\u003e\u003e代理对象:调用方法\r代理对象-\u003e\u003e代理处理器:转发代理处理器\nInvoke()方法\r代理处理器-\u003e\u003e目标对象:判断Method\n调用目标对象的方法\r目标对象-\u003e\u003e代理处理器:返回结果\r代理处理器-\u003e\u003e代理对象:返回结果\r代理对象-\u003e\u003e客户端:返回结果\rgraph LR\rc1[Client1\nSocket]--客户端发出连接--\u003ess[ServerSocket]\rc2[Client2\nSocket]--客户端发出连接--\u003ess[ServerSocket]\rss--服务器接受请求并创建新的Socket--\u003es1[为Client1创\n建的Socket]\rss--服务器接受请求并创建新的Socket--\u003es2[为Client2创\n建的Socket]\rc1--两个Socket间建立专线连接--\u003es1\rc2--两个Socket间建立专线连接--\u003es2\r卡片\r",
    
    "date": "2025-04-01 11:00:00",
    "updated": "2025-04-01 11:00:00"
  }
  
]